name: 'Miqa Test Kickoff Only'
description: 'Kick off jobs on Miqa'
inputs:
  GITHUB_TOKEN:
    description: 'GitHub token'
    required: true
  TRIGGER_ID:
    description: 'Miqa test trigger ID'
    required: true
  MIQA_API_KEY:
    description: 'Miqa API Key'
    required: false
    default: ''
  DOCKER_URI:
    description: 'Docker URI for version to test on'
    required: false
    default: ''
  MIQA_ENDPOINT:
    description: 'Root URL for Miqa (proxy or app domain)'
    required: true
  CHECK_NAME:
    description: 'Name to display in checks status'
    default: 'Triggered Miqa Test'
  SHA:
    description: 'github.sha'
  REPOSITORY:
    description: 'github.repository'
  COMPONENT_IDS:
    description: 'Specific component IDs to update (if docker is not registered to component watchers)'
    required: false
    default: ''
  ADDITIONAL_INSTRUCTIONS:
    description: 'Additional custom instructions to pass as query parameters to the trigger. Prefix with &.'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
      - name: Fetch commit SHA
        id: fetch_sha
        uses: octokit/request-action@v2.1.9
        with:
          route: GET /repos/{repo}/commits/{sha}
          repo: ${{ inputs.REPOSITORY }}
          sha: ${{ inputs.SHA }}
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      - name: Save commit SHA
        shell: bash
        id: get_sha
        run: echo "parent_sha=${{ toJSON(fromJSON(steps.fetch_sha.outputs.data).parents[1].sha) }}" >> "$GITHUB_OUTPUT"
      - name: HTTP Request - Miqa Trigger
        id: miqa_trigger_http
        uses: fjogeleit/http-request-action@v1.14.0
        with:
          url: '${{ inputs.MIQA_ENDPOINT }}/trigger_test_auto/${{ inputs.TRIGGER_ID }}?app=gh&uri=${{ inputs.DOCKER_URI }}&allow_override=1&event_id=${{ steps.get_check_run.outputs.check_run_id }}&repo=${{ inputs.REPOSITORY }}&commit=${{ inputs.SHA }}&specific_components=${{ inputs.COMPONENT_IDS }}${{ inputs.ADDITIONAL_INSTRUCTIONS }}'
          method: 'POST'
          preventFailureOnNoResponse: true
          timeout: 30000
          customHeaders: '{"Content-Type": "application/json", "app_key":"${{ inputs.MIQA_API_KEY }}"}'
          data: '{"repo":"${{ inputs.REPOSITORY }}", "commit":"${{ inputs.SHA }}"}'
      - id: print_response
        name: Print response from miqa_trigger_http
        shell: bash
        run: |
          echo "Miqa test is running. Monitor status at ${{ toJSON(fromJSON(steps.miqa_trigger_http.outputs.response).link) }}"
